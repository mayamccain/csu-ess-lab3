---
title: "Lab 3: COVID Wrangling"
subtitle: "ESS 330"
author: "Maya McCain" 
name: \\https://mayamccain.github.io/
email: "maya.mccain@colostate.edu"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(dplyr)
library(flextable)
library(zoo)
library(skimr)
```

#Question 1

```{r}
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv'
covid = read_csv(url)
```

#Question 2

```{r}
library(tidyverse); library(flextable)
data = read_csv('https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv')

my.date <- as.Date("2022-02-01")
class(my.date)

my.state <- "Colorado"
class(my.state)
```


```{r}
daily_summary <- covid %>%
  filter(state == "Colorado") %>%
  group_by(county) %>%
  arrange(county, date) %>%
  mutate(daily_new_cases = cases - lag(cases)) %>%
  ungroup()
head(daily_summary)
as_flextable(head(daily_summary)) %>% 
flextable::set_caption("Daily Summary of Cumulative Cases")
```

```{r}
cumulative_cases <- daily_summary %>% 
  filter(date == my.date) %>%
  group_by(county) %>%
  summarise(cumulative_cases = sum(cases)) %>%
  arrange(-cumulative_cases) %>%
  slice(1:5)
as_flextable(head(cumulative_cases)) %>% 
flextable::set_caption("Counties with Most Cumulative COVID Cases")
```

```{r}
new_cases <- daily_summary %>% 
  filter(date == my.date) %>%
  group_by(county) %>%
  summarise(new_cases = sum(daily_new_cases)) %>%
  arrange(-new_cases) %>%
  slice(1:5)
as_flextable(head(new_cases)) %>% 
flextable::set_caption("Counties with Most New COVID Cases")
```

#Question 3

```{r}
pop_url <- 'https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv'
pop <- read_csv(pop_url) %>%
  filter(COUNTY != "000") %>% 
  mutate(fips = sprintf("%05s", paste0(STATE, COUNTY))) %>%  
  select(fips, contains("NAME"), contains("2021"))
```

```{r}
names(pop)
dim(pop)
nrow(pop)
str(pop)
glimpse(pop)
```

## There are numeric and character atrributes in this modified dataset. The column names are the fips column and all the columns that contain "2021" or "NAME." All the column names are different from the original covid dataset except for the fips code. This dataset now has 3144 rows and 19 columns. 

##What is the range of populations seen in Colorado counties in 2021:
```{r}
max(pop$POPESTIMATE2021, na.rm = TRUE)

min(pop$POPESTIMATE2021, na.rm = TRUE)

```
## Population of Colorado counties ranged from 54 to 9,809,462 in 2021. 


##Join the population data to the Colorado COVID data and compute the per capita cumulative cases, per capita new cases, and per capita new deaths:
```{r}
pop_url <- 'https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv'
pop_joined <- read_csv(pop_url) %>%
  filter(COUNTY != "000") %>% 
  mutate(fips = sprintf("%05s", paste0(STATE, COUNTY))) %>%
  right_join(covid) %>% 
  select(fips,  date, cases, deaths, contains("NAME"), contains("2021")) %>% 
  group_by(fips) %>%
  arrange(fips, date) %>%
  mutate(daily_new_cases = cases - lag(cases)) %>%
  ungroup()

print(pop_joined)

```
```{r}
per_cap <- pop_joined %>% 
  filter(date == my.date) %>% 
  mutate(per_cap_cases = cases / POPESTIMATE2021,
         per_cap_new = daily_new_cases / POPESTIMATE2021,
         per_cap_deaths = deaths / POPESTIMATE2021)
print(per_cap)
```
#Generate (2) new tables. The first should show the 5 counties with the most cumulative cases per capita on 2021-01-01, and the second should show the 5 counties with the most NEW cases per capita on the same date. Your tables should have clear column names and descriptive captions.
```{r}
per_cap %>% 
  slice_max(per_cap_cases, n = 5) %>% 
  select(CTYNAME, per_cap_cases) %>% 
  flextable() %>% 
  flextable::set_caption("Counties with Most Cumulative COVID Cases Per Capita")
```
```{r}
per_cap %>% 
  slice_max(per_cap_new, n = 5) %>% 
  select(CTYNAME, per_cap_new) %>% 
  flextable() %>% 
  flextable::set_caption("Counties with Most New COVID Cases Per Capita")
```
#Question 4: Rolling thresholds
#Filter the merged COVID/Population data to only include the last 14 days. Remember this should be a programmatic request and not hard-coded. Then, use the group_by/summarize paradigm to determine the total number of new cases in the last 14 days per 100,000 people. Print a table of the top 5 counties, and, report the number that meet the watch list condition: “More than 100 new cases per 100,000 residents over the past 14 days…”

#(Hint: Dates are numeric in R and thus operations like max min, -, +, >, and< work.)
```{r}
cases_14 <- per_cap %>% 
  filter(between(date, my.date -14, my.date)) %>% 
  group_by(fips) %>% 
  summarize(cases_14_days = sum(cases) / (POPESTIMATE2021[1] / 100000)) 
print(cases_14_days)

cases_14 %>% 
  inner_join(select(per_cap, fips, CTYNAME), by = "fips") %>% 
slice_max(cases_14_days, n = 5) %>% 
select(CTYNAME, cases_14_days) %>% 
  flextable() %>% 
  flextable::set_caption("Counties with Most New COVID Cases in the Last 14 days per 100,000 People")
```

